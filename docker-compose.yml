version: '3.3'

services:
    portainer:
            image: portainer/portainer
            command: -H unix:///var/run/docker.sock
            volumes:
                - /var/run/docker.sock:/var/run/docker.sock
                - portainer_data:/data
            labels:
                - "traefik.frontend.rule=Host:port.srv.tmpry.com"
    # traefik:
    #         image: traefik
    #         command: --api --docker --docker.swarmMode #--docker.domain=traefik --docker.watch
    #         ports:
    #             - "80:80"     # The HTTP port, not the web UI port
    #         volumes:
    #             - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
    #         labels:
    #             - "traefik.frontend.rule=Host:traefik.srv.tmpry.com"
    #             - "traefik.port=8080"
    transfersh:
            image: dutchcoders/transfer.sh:latest
            command: --provider local --basedir /tmp/
            labels:
                - "traefik.frontend.rule=Host:transfer.srv.tmpry.com"
                - "traefik.port=8080"

    lb:
        image: traefik:1.5-alpine
        restart: always
        command: 
            --web --acme.storage=/etc/traefik/acme.json --logLevel=info \
                --entryPoints="Name:http Address::80" --entryPoints="Name:https Address::443 TLS" \
            --defaultentrypoints=http,https \
            --acme=true --acme.entrypoint=https --acme.httpchallenge --acme.httpchallenge.entrypoint=http \
            --acme.domains="srv.tmpry.com" --acme.email="domains@ppls.io" \
            --docker --docker.domain="prod.domain" \
            --docker.endpoint="unix:///var/run/docker.sock" \
            --docker.watch=true \
            --docker.exposedbydefault="false"
        container_name: traefik
        networks:
                - core
        ports:
                - "80:80"
                - "443:443"
                - "8080:8080"
        volumes:
                - ./docker/traefik:/etc/traefik/
                - /var/run/docker.sock:/var/run/docker.sock
volumes:
    portainer_data:
